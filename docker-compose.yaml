version: '3.9'

services:
  mongodb:
    networks:
      - local

    restart: on-failure
    image: mongo:latest


    ports:
      - "27017:27017"

    healthcheck:
      test: mongosh --eval 'db.runCommand("ping").ok' -u username -p password
      interval: 2s
      timeout: 10s
      retries: 10

    environment:
      - MONGO_INITDB_ROOT_USERNAME=username
      - MONGO_INITDB_ROOT_PASSWORD=password

  redis:
    networks:
      - local

    restart: on-failure
    image: "redis:latest"

    command: redis-server --port 6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 2s
      timeout: 2s
      retries: 10
    ports:
      - "6379:6379"

    volumes:
      - redis-data:/var/lib/redis

    environment:
      REDIS_REPLICATION_MODE: master


  app:
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy

    networks:
      - local
    # restart: on-failure # disabled for debugging

    ports:
      - "8080:8080"
      - "8082:8082"

    build: .
    env_file: .env

    environment:
      ### MongoDB
      - MONGODB_URI=mongodb://username:password@mongodb:27017
      - MONGODB_DATABASE=lake
      - MONGODB_COLLECTION=items
      ### Redis
      - REDIS_ADDRESSES=redis:6379
      - REDIS_POOL_TIMEOUT=5s
      ### gRPC
      - GRPC_PORT=8080
      ### HTTP
      - HTTP_PORT=8082

networks:
  local:
    driver: bridge

volumes:
  redis-data:
  mongo-data: